{
  "paragraphs": [
    {
      "text": "%md\n\n###Zbiór danych\n\nFragment powieści \u003cem\u003eThe Sorrows of Werther\u003c/em\u003e składający się ze 150 słów.",
      "dateUpdated": "Nov 27, 2016 6:42:20 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480228208982_-189130141",
      "id": "20161127-063008_160654062",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003eZbiór danych\u003c/h3\u003e\n\u003cp\u003eFragment powieści \u003cem\u003eThe Sorrows of Werther\u003c/em\u003e składający się ze 150 słów.\u003c/p\u003e\n"
      },
      "dateCreated": "Nov 27, 2016 6:30:08 AM",
      "dateStarted": "Nov 27, 2016 6:39:49 AM",
      "dateFinished": "Nov 27, 2016 6:39:49 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\n\ncat /usr/zeppelin/data/words150.txt\n",
      "dateUpdated": "Nov 27, 2016 5:23:39 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 144.60000610351562,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480202224504_311521988",
      "id": "20161126-231704_433135394",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "A wonderful serenity has taken possession of my entire soul, like these sweet mornings of spring which I enjoy with my whole heart. I am alone, and feel the charm of existence in this spot, which was created for the bliss of souls like mine. I am so happy, my dear friend, so absorbed in the exquisite sense of mere tranquil existence, that I neglect my talents. I should be incapable of drawing a single stroke at the present moment; and yet I feel that I never was a greater artist than now. When, while the lovely valley teems with vapour around me, and the meridian sun strikes the upper surface of the impenetrable foliage of my trees, and but a few stray gleams steal into the inner sanctuary, I throw myself down among the tall grass by the trickling stream; and, as I lie close to\n"
      },
      "dateCreated": "Nov 26, 2016 11:17:04 PM",
      "dateStarted": "Nov 27, 2016 5:23:39 AM",
      "dateFinished": "Nov 27, 2016 5:23:39 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n###Przykład: \u003cstrong\u003eWord Count\u003c/strong\u003e\n\nPoniższy przykład wypisuje pary typu (String, Int), w których zapisane jest (słowo, liczba wystąpień słowa w tekście). \n",
      "dateUpdated": "Nov 27, 2016 6:43:50 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480226129775_907247170",
      "id": "20161127-055529_200849664",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003ePrzykład: \u003cstrong\u003eWord Count\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003ePoniższy przykład wypisuje pary typu (String, Int), w których zapisane jest (słowo, liczba wystąpień słowa w tekście).\u003c/p\u003e\n"
      },
      "dateCreated": "Nov 27, 2016 5:55:29 AM",
      "dateStarted": "Nov 27, 2016 6:39:12 AM",
      "dateFinished": "Nov 27, 2016 6:39:12 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark \n\nval textFile \u003d sc.textFile(\"file:///usr/zeppelin/data/words150.txt\")\nval counts \u003d textFile.flatMap(line \u003d\u003e line.split(\" \"))\n                 .map(word \u003d\u003e (word, 1))\n                 .reduceByKey(_ + _)\ncounts.collect().foreach(println(_)) \n\n",
      "dateUpdated": "Nov 27, 2016 6:49:37 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480202092416_-2107961341",
      "id": "20161126-231452_1703808069",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\ntextFile: org.apache.spark.rdd.RDD[String] \u003d file:///usr/zeppelin/data/words150.txt MapPartitionsRDD[12] at textFile at \u003cconsole\u003e:27\n\ncounts: org.apache.spark.rdd.RDD[(String, Int)] \u003d ShuffledRDD[15] at reduceByKey at \u003cconsole\u003e:31\n(sweet,1)\n(tranquil,1)\n(existence,,1)\n(created,1)\n(this,1)\n(possession,1)\n(greater,1)\n(existence,1)\n(am,2)\n(never,1)\n(grass,1)\n(with,2)\n(sense,1)\n(lie,1)\n(drawing,1)\n(When,,1)\n(upper,1)\n(dear,1)\n(now.,1)\n(my,5)\n(teems,1)\n(close,1)\n(friend,,1)\n(me,,1)\n(has,1)\n(happy,,1)\n(heart.,1)\n(among,1)\n(souls,1)\n(few,1)\n(absorbed,1)\n(down,1)\n(wonderful,1)\n(neglect,1)\n(into,1)\n(as,1)\n(throw,1)\n(impenetrable,1)\n(spot,,1)\n(stroke,1)\n(so,2)\n(myself,1)\n(sun,1)\n(single,1)\n(inner,1)\n(yet,1)\n(feel,2)\n(sanctuary,,1)\n(valley,1)\n(mere,1)\n(than,1)\n(alone,,1)\n(whole,1)\n(bliss,1)\n(stray,1)\n(around,1)\n(A,1)\n(steal,1)\n(meridian,1)\n(at,1)\n(incapable,1)\n(talents.,1)\n(mine.,1)\n(in,2)\n(which,2)\n(trees,,1)\n(trickling,1)\n(should,1)\n(for,1)\n(while,1)\n(charm,1)\n(tall,1)\n(taken,1)\n(present,1)\n(these,1)\n(spring,1)\n(serenity,1)\n(and,,1)\n(the,11)\n(stream;,1)\n(moment;,1)\n(foliage,1)\n(surface,1)\n(gleams,1)\n(a,3)\n(was,2)\n(entire,1)\n(mornings,1)\n(lovely,1)\n(soul,,1)\n(be,1)\n(enjoy,1)\n(that,2)\n(I,9)\n(to,1)\n(strikes,1)\n(of,8)\n(by,1)\n(like,2)\n(but,1)\n(vapour,1)\n(and,4)\n(exquisite,1)\n(artist,1)\n"
      },
      "dateCreated": "Nov 26, 2016 11:14:52 PM",
      "dateStarted": "Nov 27, 2016 6:49:37 AM",
      "dateFinished": "Nov 27, 2016 6:49:38 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n###Zadanie\n\nSpróbuj powyższy przykład napisać inaczej. Pamiętaj o różnicach pomiędzy operacjami typu \u003cstrong\u003etransformations\u003c/strong\u003e i \u003cstrong\u003eactions\u003c/strong\u003e.\n\nPrzydatne linki: \n[Transformations](http://spark.apache.org/docs/latest/programming-guide.html#transformations)\n[Actions](http://spark.apache.org/docs/latest/programming-guide.html#actions)\n\nPodpowiedź: Jaką inną funkcją można zastąpić `reduceByKey()`?",
      "dateUpdated": "Nov 27, 2016 6:41:41 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480224033869_1228324799",
      "id": "20161127-052033_1491694150",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003eZadanie\u003c/h3\u003e\n\u003cp\u003eSpróbuj powyższy przykład napisać inaczej. Pamiętaj o różnicach pomiędzy operacjami typu \u003cstrong\u003etransformations\u003c/strong\u003e i \u003cstrong\u003eactions\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003ePrzydatne linki:\n\u003cbr  /\u003e\u003ca href\u003d\"http://spark.apache.org/docs/latest/programming-guide.html#transformations\"\u003eTransformations\u003c/a\u003e\n\u003cbr  /\u003e\u003ca href\u003d\"http://spark.apache.org/docs/latest/programming-guide.html#actions\"\u003eActions\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePodpowiedź: Jaką inną funkcją można zastąpić \u003ccode\u003ereduceByKey()\u003c/code\u003e?\u003c/p\u003e\n"
      },
      "dateCreated": "Nov 27, 2016 5:20:33 AM",
      "dateStarted": "Nov 27, 2016 6:41:33 AM",
      "dateFinished": "Nov 27, 2016 6:41:33 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark \n\nval textFile \u003d sc.textFile(\"file:///usr/zeppelin/data/words150.txt\")\nval counts \u003d textFile.flatMap(line \u003d\u003e line.split(\" \"))\n                 .map(word \u003d\u003e (word, 1))\n                //  .reduceByKey(_ + _)\n                \ncounts.collect().foreach(println(_)) \n",
      "dateUpdated": "Nov 27, 2016 6:21:24 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480226203965_-1390565207",
      "id": "20161127-055643_191337174",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\ntextFile: org.apache.spark.rdd.RDD[String] \u003d file:///usr/zeppelin/data/words150.txt MapPartitionsRDD[7] at textFile at \u003cconsole\u003e:27\n\ncounts: org.apache.spark.rdd.RDD[(String, Int)] \u003d ShuffledRDD[10] at aggregateByKey at \u003cconsole\u003e:31\n(sweet,1)\n(tranquil,1)\n(existence,,1)\n(created,1)\n(this,1)\n(possession,1)\n(greater,1)\n(existence,1)\n(am,2)\n(never,1)\n(grass,1)\n(with,2)\n(sense,1)\n(lie,1)\n(drawing,1)\n(When,,1)\n(upper,1)\n(dear,1)\n(now.,1)\n(my,5)\n(teems,1)\n(close,1)\n(friend,,1)\n(me,,1)\n(has,1)\n(happy,,1)\n(heart.,1)\n(among,1)\n(souls,1)\n(few,1)\n(absorbed,1)\n(down,1)\n(wonderful,1)\n(neglect,1)\n(into,1)\n(as,1)\n(throw,1)\n(impenetrable,1)\n(spot,,1)\n(stroke,1)\n(so,2)\n(myself,1)\n(sun,1)\n(single,1)\n(inner,1)\n(yet,1)\n(feel,2)\n(sanctuary,,1)\n(valley,1)\n(mere,1)\n(than,1)\n(alone,,1)\n(whole,1)\n(bliss,1)\n(stray,1)\n(around,1)\n(A,1)\n(steal,1)\n(meridian,1)\n(at,1)\n(incapable,1)\n(talents.,1)\n(mine.,1)\n(in,2)\n(which,2)\n(trees,,1)\n(trickling,1)\n(should,1)\n(for,1)\n(while,1)\n(charm,1)\n(tall,1)\n(taken,1)\n(present,1)\n(these,1)\n(spring,1)\n(serenity,1)\n(and,,1)\n(the,11)\n(stream;,1)\n(moment;,1)\n(foliage,1)\n(surface,1)\n(gleams,1)\n(a,3)\n(was,2)\n(entire,1)\n(mornings,1)\n(lovely,1)\n(soul,,1)\n(be,1)\n(enjoy,1)\n(that,2)\n(I,9)\n(to,1)\n(strikes,1)\n(of,8)\n(by,1)\n(like,2)\n(but,1)\n(vapour,1)\n(and,4)\n(exquisite,1)\n(artist,1)\n"
      },
      "dateCreated": "Nov 27, 2016 5:56:43 AM",
      "dateStarted": "Nov 27, 2016 6:15:11 AM",
      "dateFinished": "Nov 27, 2016 6:15:13 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n",
      "dateUpdated": "Nov 27, 2016 6:12:31 AM",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480227151121_917847163",
      "id": "20161127-061231_965251225",
      "dateCreated": "Nov 27, 2016 6:12:31 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "01_RDD ",
  "id": "2C1M1UE29",
  "angularObjects": {
    "2C2C3EZB3:shared_process": [],
    "2C3ZGJY97:shared_process": [],
    "2C3SNFNBU:shared_process": [],
    "2C3D6JQ57:shared_process": [],
    "2C3E6UDKP:shared_process": [],
    "2C34GDA5F:shared_process": [],
    "2C2588HFQ:shared_process": [],
    "2C4K6UWHS:shared_process": [],
    "2C4GVEV3N:shared_process": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}
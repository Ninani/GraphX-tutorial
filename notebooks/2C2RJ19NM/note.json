{
  "paragraphs": [
    {
      "text": "%md\n\n#__Triangle Counting__\n",
      "dateUpdated": "Nov 28, 2016 8:12:22 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480229043930_1599350192",
      "id": "20161127-064403_575656847",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch1\u003e\u003cstrong\u003eTriangle Counting\u003c/strong\u003e\u003c/h1\u003e\n"
      },
      "dateCreated": "Nov 27, 2016 6:44:03 AM",
      "dateStarted": "Nov 28, 2016 8:12:18 AM",
      "dateFinished": "Nov 28, 2016 8:12:18 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n###__Zbiór danych: Amazon product co-purchasing network, March 02 2003__\n\nPary krawędzi __a, b__ produktów, które były ze sobą często kupowane (jeśli produkt __a__ był często kupowany w parze z __b__ to graf zawiera krawędź od wierzchołka __a__ do __b__).\n[szczegółowe dane](https://snap.stanford.edu/data/amazon0302.html)\n\n###Wypisz pięć pierwszych pozycji.",
      "dateUpdated": "Nov 28, 2016 8:36:40 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480245361537_515719601",
      "id": "20161127-111601_1982427271",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e\u003cstrong\u003eZbiór danych: Amazon product co-purchasing network, March 02 2003\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003ePary krawędzi \u003cstrong\u003ea, b\u003c/strong\u003e produktów, które były ze sobą często kupowane (jeśli produkt \u003cstrong\u003ea\u003c/strong\u003e był często kupowany w parze z \u003cstrong\u003eb\u003c/strong\u003e to graf zawiera krawędź od wierzchołka \u003cstrong\u003ea\u003c/strong\u003e do \u003cstrong\u003eb\u003c/strong\u003e).\n\u003cbr  /\u003e\u003ca href\u003d\"https://snap.stanford.edu/data/amazon0302.html\"\u003eszczegółowe dane\u003c/a\u003e\u003c/p\u003e\n\u003ch3\u003eWypisz pięć pierwszych pozycji.\u003c/h3\u003e\n"
      },
      "dateCreated": "Nov 27, 2016 11:16:01 AM",
      "dateStarted": "Nov 28, 2016 8:36:37 AM",
      "dateFinished": "Nov 28, 2016 8:36:37 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\n\nhead -5 /usr/zeppelin/data/AmazonCut.txt",
      "dateUpdated": "Nov 27, 2016 2:24:36 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sh"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480245749150_-211518238",
      "id": "20161127-112229_1004549168",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "0 1\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n"
      },
      "dateCreated": "Nov 27, 2016 11:22:29 AM",
      "dateStarted": "Nov 27, 2016 2:24:36 PM",
      "dateFinished": "Nov 27, 2016 2:24:37 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n###Zaimportuj potrzebne zależności\n",
      "dateUpdated": "Nov 28, 2016 8:17:15 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480320895517_-239107342",
      "id": "20161128-081455_1626454977",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003eZaimportuj potrzebne zależności\u003c/h3\u003e\n"
      },
      "dateCreated": "Nov 28, 2016 8:14:55 AM",
      "dateStarted": "Nov 28, 2016 8:17:15 AM",
      "dateFinished": "Nov 28, 2016 8:17:15 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\nimport org.apache.spark.graphx.{GraphLoader, PartitionStrategy}\n",
      "dateUpdated": "Nov 28, 2016 8:20:24 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 93.64999389648438,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480229267888_-1625308605",
      "id": "20161127-064747_80543448",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nimport org.apache.spark.graphx.{GraphLoader, PartitionStrategy}\n"
      },
      "dateCreated": "Nov 27, 2016 6:47:47 AM",
      "dateStarted": "Nov 28, 2016 8:17:30 AM",
      "dateFinished": "Nov 28, 2016 8:17:30 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n###Wczytaj dane i dokonaj podziału według startegii `RandomVertexCut`",
      "dateUpdated": "Nov 28, 2016 8:19:30 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480321061452_-313886547",
      "id": "20161128-081741_351439239",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003eWczytaj dane i dokonaj podziału według startegii \u003ccode\u003eRandomVertexCut\u003c/code\u003e\u003c/h3\u003e\n"
      },
      "dateCreated": "Nov 28, 2016 8:17:41 AM",
      "dateStarted": "Nov 28, 2016 8:19:30 AM",
      "dateFinished": "Nov 28, 2016 8:19:30 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\n// Load the edges in canonical order and partition the graph for triangle count\nval graph \u003d GraphLoader.edgeListFile(sc, \"file:///usr/zeppelin/data/AmazonCut.txt\", true)\n  .partitionBy(PartitionStrategy.RandomVertexCut)\n",
      "dateUpdated": "Nov 28, 2016 8:20:17 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480321053356_-1395431029",
      "id": "20161128-081733_2122817082",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\ngraph: org.apache.spark.graphx.Graph[Int,Int] \u003d org.apache.spark.graphx.impl.GraphImpl@21abcbaa\n"
      },
      "dateCreated": "Nov 28, 2016 8:17:33 AM",
      "dateStarted": "Nov 28, 2016 8:20:17 AM",
      "dateFinished": "Nov 28, 2016 8:20:17 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n###Znajdź __triangle count__ dla każdego wierzchołka i wypisz\n",
      "dateUpdated": "Nov 28, 2016 8:25:00 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480321305171_-1157303753",
      "id": "20161128-082145_1178348415",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003eZnajdź \u003cstrong\u003etriangle count\u003c/strong\u003e dla każdego wierzchołka i wypisz\u003c/h3\u003e\n"
      },
      "dateCreated": "Nov 28, 2016 8:21:45 AM",
      "dateStarted": "Nov 28, 2016 8:25:00 AM",
      "dateFinished": "Nov 28, 2016 8:25:00 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\n// Find the triangle count for each vertex\nval triCounts \u003d graph.triangleCount().vertices\n// triCounts.collect.foreach(println(_))            //uncomment",
      "dateUpdated": "Nov 28, 2016 8:26:24 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480321208386_99332128",
      "id": "20161128-082008_1544424615",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\ntriCounts: org.apache.spark.graphx.VertexRDD[Int] \u003d VertexRDDImpl[285] at RDD at VertexRDD.scala:57\n"
      },
      "dateCreated": "Nov 28, 2016 8:20:08 AM",
      "dateStarted": "Nov 28, 2016 8:25:43 AM",
      "dateFinished": "Nov 28, 2016 8:25:43 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n###__Zadanie__\n\nW przykładzie korzystaliśmy z `triangleCount(): Graph[Int, ED]` dostępnej w clasie `GraphOps` ([dokumentacja](http://spark.apache.org/docs/2.0.1/api/scala/index.html#org.apache.spark.graphx.GraphOps@triangleCount%28%29:org.apache.spark.graphx.Graph[Int,ED]))\n\nPrzepisz przykład wykorzystując implementację `runPreCanonicalized` z `TriangleCount` ([dokumentacja](http://spark.apache.org/docs/2.0.1/api/scala/index.html#org.apache.spark.graphx.lib.TriangleCount$@runPreCanonicalized[VD,ED]%28graph:org.apache.spark.graphx.Graph[VD,ED]%29%28implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED]%29:org.apache.spark.graphx.Graph[Int,ED]))",
      "dateUpdated": "Nov 28, 2016 8:32:46 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480244682476_1813295395",
      "id": "20161127-110442_1579077986",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e\u003cstrong\u003eZadanie\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003eW przykładzie korzystaliśmy z \u003ccode\u003etriangleCount(): Graph[Int, ED]\u003c/code\u003e dostępnej w clasie \u003ccode\u003eGraphOps\u003c/code\u003e (\u003ca href\u003d\"http://spark.apache.org/docs/2.0.1/api/scala/index.html#org.apache.spark.graphx.GraphOps@triangleCount%28%29:org.apache.spark.graphx.Graph[Int,ED]\"\u003edokumentacja\u003c/a\u003e)\u003c/p\u003e\n\u003cp\u003ePrzepisz przykład wykorzystując implementację \u003ccode\u003erunPreCanonicalized\u003c/code\u003e z \u003ccode\u003eTriangleCount\u003c/code\u003e (\u003ca href\u003d\"http://spark.apache.org/docs/2.0.1/api/scala/index.html#org.apache.spark.graphx.lib.TriangleCount$@runPreCanonicalized[VD,ED]%28graph:org.apache.spark.graphx.Graph[VD,ED]%29%28implicitevidence$3:scala.reflect.ClassTag[VD],implicitevidence$4:scala.reflect.ClassTag[ED]%29:org.apache.spark.graphx.Graph[Int,ED]\"\u003edokumentacja\u003c/a\u003e)\u003c/p\u003e\n"
      },
      "dateCreated": "Nov 27, 2016 11:04:42 AM",
      "dateStarted": "Nov 28, 2016 8:32:46 AM",
      "dateFinished": "Nov 28, 2016 8:32:46 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\n// Count triangle counts with TriangleCount.runPreCanonicalized\n\n// val canonicalGraph \u003d ???             //put your code\n// val triangleCounts \u003d ???             //put your code\n\n",
      "dateUpdated": "Nov 28, 2016 8:58:55 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480289611434_-352822512",
      "id": "20161127-233331_782684593",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Nov 27, 2016 11:33:31 PM",
      "dateStarted": "Nov 28, 2016 8:58:55 AM",
      "dateFinished": "Nov 28, 2016 8:58:55 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\n",
      "dateUpdated": "Nov 28, 2016 8:32:08 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1480290099219_-711118972",
      "id": "20161127-234139_1061961261",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Nov 27, 2016 11:41:39 PM",
      "dateStarted": "Nov 28, 2016 8:32:08 AM",
      "dateFinished": "Nov 28, 2016 8:32:08 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "03_TriangleCounting",
  "id": "2C2RJ19NM",
  "angularObjects": {
    "2C2C3EZB3:shared_process": [],
    "2C3ZGJY97:shared_process": [],
    "2C3SNFNBU:shared_process": [],
    "2C3D6JQ57:shared_process": [],
    "2C3E6UDKP:shared_process": [],
    "2C34GDA5F:shared_process": [],
    "2C2588HFQ:shared_process": [],
    "2C4K6UWHS:shared_process": [],
    "2C4GVEV3N:shared_process": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}
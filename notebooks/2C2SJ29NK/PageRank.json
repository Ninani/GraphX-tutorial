{"paragraphs":[{"text":"def toJSON(ranks: org.apache.spark.graphx.VertexRDD[Double], pages: Int): String = {\r\n  val json = ranks.collect().take(pages).mkString(\"\\n\").replaceAll(\"\\\\(\",\"\\\\{\\\"name\\\":\\\"\").replaceAll(\",\",\"\\\", \\\"size\\\":\").replaceAll(\"\\\\)\",\"\\\\},\")\r\n  val subJSON = json.substring(0, json.size-1)\r\n    val data2 = \"\"\"{\r\n \"name\": \"flare\",\r\n \"children\": [\r\n  {\r\n   \"name\": \"analytics\",\r\n   \"children\": [\r\n    {\r\n     \"name\": \"cluster\",\r\n     \"children\": [ \"\"\" + subJSON + \"\"\"]\r\n  }\r\n ]\r\n}\r\n]\r\n}\"\"\"\r\n  return data2\r\n}\r\n\r\nimport org.apache.spark.graphx.GraphLoader\r\n\r\nval graph = GraphLoader.edgeListFile(sc, \"file:///usr/zeppelin/data/AmazonCut.txt\")\r\n// Run PageRank and return vertices\r\nval ranks = ................\r\n\r\n//second parameter sets # of vertices to visualize (suggested < 500)\r\nval jsonRanks = toJSON(ranks, 200)\r\n\r\n/////VISUALIZATION/////\r\nprint(s\"\"\"%html \r\n<div id=\"inline1\"></div> <!-- add div to draw into -->\r\n<script>\r\n\r\nvar diameter = 700, // changed size\r\n    format = d3.format(\",d\"),\r\n    color = d3.scale.category20c();\r\n\r\nvar bubble = d3.layout.pack()\r\n    .sort(null)\r\n    .size([diameter, diameter])\r\n    .padding(1.5);\r\n\r\nvar svg = d3.select(\"#inline1\").append(\"svg\") //changed where to draw, changed to draw to my div\r\n    .attr(\"width\", diameter)\r\n    .attr(\"height\", diameter)\r\n    .attr(\"class\", \"bubble\");\r\n\r\nvar plot = function(root) {\r\n\r\n  var node = svg.selectAll(\".node\")\r\n      .data(bubble.nodes(classes(root))\r\n      .filter(function(d) { return !d.children; }))\r\n    .enter().append(\"g\")\r\n      .attr(\"class\", \"node\")\r\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\r\n\r\n  node.append(\"title\")\r\n      .text(function(d) { return d.className + \": \" + format(d.value); });\r\n\r\n  node.append(\"circle\")\r\n      .attr(\"r\", function(d) { return d.r; })\r\n      .style(\"fill\", function(d) { return color(d.packageName); });\r\n\r\n  node.append(\"text\")\r\n      .attr(\"dy\", \".3em\")\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(function(d) { return d.className.substring(0, d.r / 3); });\r\n}\r\n\r\n// Returns a flattened hierarchy containing all leaf nodes under the root.\r\nfunction classes(root) {\r\n  var classes = [];\r\n\r\n  function recurse(name, node) {\r\n    if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });\r\n    else classes.push({packageName: name, className: node.name, value: node.size});\r\n  }\r\n\r\n  recurse(null, root);\r\n  return {children: classes};\r\n}\r\n\r\nplot(${jsonRanks}) // inject json from scala\r\n\r\nd3.select(self.frameElement).style(\"height\", diameter + \"px\");\r\n\r\n</script>\r\n\r\n\"\"\")\r\n     ","dateUpdated":"2016-11-26T22:58:47+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1480200457926_1175568448","id":"20161126-224737_1489725412","dateCreated":"2016-11-26T22:47:37+0000","dateStarted":"2016-11-26T22:56:24+0000","dateFinished":"2016-11-26T22:57:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3013","errorMessage":""},{"text":"","dateUpdated":"2016-11-26T22:50:04+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{},"map":{"baseMapType":"Streets","isOnline":true,"pinCols":[]}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1480200593468_1121485774","id":"20161126-224953_57380721","dateCreated":"2016-11-26T22:49:53+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:3014"}],"name":"PageRank","id":"2C4HMH194","angularObjects":{"2C4F6WADE:shared_process":[],"2C2B3BH8S:shared_process":[],"2C2EXYFHH:shared_process":[],"2C5BAUTHK:shared_process":[],"2C4DRUG84:shared_process":[],"2C4NWVCS6:shared_process":[],"2C3W3R1C5:shared_process":[],"2C3CMMPQ4:shared_process":[],"2C53R9FHW:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}